@model IPagedList<EventEase.Models.Event>
@using X.PagedList
@using X.PagedList.Mvc.Core

@{
    ViewData["Title"] = "EventEase | Find Your Experience";
}

<div class="container-fluid py-5">
    <!-- Hero Section -->
    <div class="text-center mb-5">
        <h1 class="display-4 fw-bold text-gradient">🎉 Welcome to EventEase 🎉</h1>
        <p class="lead text-muted">Find the most vibrant events, book with ease, and make memories that last forever.</p>
    </div>

    <!-- Enhanced Filter Section -->
    <form method="get" asp-action="Index" class="row g-3 mb-5 justify-content-center filter-card">
        <!-- Search -->
        <div class="col-md-4">
            <div class="input-group">
                <input type="text" name="searchTerm" class="form-control search-box" 
                       placeholder="🔍 Search events, venues..." 
                       value="@ViewData["SearchTerm"]" />
                <button type="submit" class="btn btn-party">Search</button>
            </div>
        </div>

        <!-- Filters Row -->
        <div class="row g-3 mt-2 justify-content-center">
            <!-- Event Type -->
            <div class="col-md-3">
                <select name="eventTypeId" class="form-select">
                    <option value="">All Event Types</option>
                    @foreach (var type in (SelectList)ViewData["EventTypes"])
                    {
                        <option value="@type.Value" selected="@(ViewData["EventTypeId"]?.ToString() == type.Value)">
                            @type.Text
                        </option>
                    }
                </select>
            </div>
            
            <!-- Venue -->
            <div class="col-md-3">
                <select name="venueId" class="form-select">
                    <option value="">All Venues</option>
                    @foreach (var venue in (SelectList)ViewData["Venues"])
                    {
                        <option value="@venue.Value" selected="@(ViewData["VenueId"]?.ToString() == venue.Value)">
                            @venue.Text
                        </option>
                    }
                </select>
            </div>
            
            <!-- Date Range -->
            <div class="col-md-2">
                <input type="date" name="startDate" class="form-control" 
                       value="@ViewData["StartDate"]" placeholder="From" />
            </div>
            <div class="col-md-2">
                <input type="date" name="endDate" class="form-control" 
                       value="@ViewData["EndDate"]" placeholder="To" />
            </div>
            
            <!-- Availability -->
            <div class="col-md-2">
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" name="availableOnly" 
                           value="true" id="availableCheck" 
                           checked="@(ViewData["AvailableOnly"] as bool? == true)" />
                    <label class="form-check-label" for="availableCheck">
                        Available Only
                    </label>
                </div>
            </div>
        </div>
    </form>

    <!-- Events Section -->
    @if (Model.Any())
    {
        <h2 class="text-center mb-4 text-dark fw-semibold">Upcoming Events</h2>
        
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
            @foreach (var eventItem in Model)
            {
                <div class="col">
                    <div class="card shadow-lg border-0 rounded-3 overflow-hidden event-card h-100">
                        <!-- Venue Image -->
                        @if (!string.IsNullOrEmpty(eventItem.Venue?.ImageVenue))
                        {
                            <img src="@eventItem.Venue.ImageVenue" 
                                 class="card-img-top img-fluid event-image" 
                                 alt="@eventItem.Venue.VenueName">
                        }
                        else
                        {
                            <div class="card-img-top bg-secondary text-white d-flex align-items-center justify-content-center"
                                 style="height: 200px;">
                                <span>No Image Available</span>
                            </div>
                        }

                        <div class="card-body">
                            <h5 class="card-title fw-bold text-primary">@eventItem.EventName</h5>
                            <p class="card-text text-muted">
                                <i class="bi bi-calendar-event"></i> 
                                @eventItem.EventDate.ToString("dddd, MMM d, yyyy")
                            </p>
                            <p class="card-text">@eventItem.Description</p>
                            
                            <hr>
                            
                            <!-- Event Type -->
                            <p class="text-muted">
                                <i class="bi bi-tag"></i> 
                                <strong>Type:</strong> @eventItem.EventType?.Name
                            </p>
                            
                            <!-- Venue Info -->
                            <p class="text-muted">
                                <i class="bi bi-geo-alt"></i> 
                                <strong>Venue:</strong> @eventItem.Venue?.VenueName
                            </p>
                            <p class="text-muted">
                                <i class="bi bi-pin-map"></i> 
                                <strong>Location:</strong> @eventItem.Venue?.VenueLocaiton
                            </p>

                            <!-- Bookings -->
                            <h6 class="mt-3">
                                <i class="bi bi-bookmarks"></i> 
                                <strong>Bookings</strong>
                            </h6>
                            @if (eventItem.Bookings.Any())
                            {
                                <ul class="list-group small">
                                    @foreach (var booking in eventItem.Bookings.Take(3))
                                    {
                                        <li class="list-group-item text-muted bg-light border-0">
                                            <i class="bi bi-clock"></i> 
                                            @booking.BookingDate.ToString("MMM d, yyyy")
                                        </li>
                                    }
                                    @if (eventItem.Bookings.Count > 3)
                                    {
                                        <li class="list-group-item text-muted bg-light border-0">
                                            + @(eventItem.Bookings.Count - 3) more...
                                        </li>
                                    }
                                </ul>
                            }
                            else
                            {
                                <p class="text-muted">
                                    <i class="bi bi-x-circle"></i> No bookings yet
                                </p>
                            }
                            
                            <!-- Booking Button -->
                            <a href="@Url.Action("Create", "Bookings", new { eventId = eventItem.EventId })" 
                               class="btn btn-primary mt-3 w-100">
                                Book Now
                            </a>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Pagination -->
        <div class="d-flex justify-content-center mt-4">
            @Html.PagedListPager(Model, page => Url.Action("Index", new
            {
                page,
                searchTerm = ViewData["SearchTerm"],
                eventTypeId = ViewData["EventTypeId"],
                venueId = ViewData["VenueId"],
                startDate = ViewData["StartDate"],
                endDate = ViewData["EndDate"],
                availableOnly = ViewData["AvailableOnly"]
            }),
            new PagedListRenderOptions {
                LiElementClasses = new[] { "page-item" },
                PageClasses = new[] { "page-link" },
                DisplayLinkToFirstPage = PagedListDisplayMode.Never,
                DisplayLinkToLastPage = PagedListDisplayMode.Never,
                DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                DisplayLinkToNextPage = PagedListDisplayMode.Always,
                MaximumPageNumbersToDisplay = 5
            })
        </div>
    }
    else
    {
        <div class="text-center py-5">
            <p class="display-5 text-muted">No events match your search criteria</p>
            <a href="@Url.Action("Index")" class="btn btn-party mt-3">Clear Filters</a>
        </div>
    }
</div>

<!-- Custom Styling -->
<style>
    /* Gradient Text */
    .text-gradient {
        background: linear-gradient(90deg, #003366, #00509e, #80d0ff, #87ceeb);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    /* Search & Filter Elements */
    .search-box {
        padding: 0.75rem 1.25rem;
        border-radius: 50px 0 0 50px;
        border: 2px solid #003366;
        border-right: none;
        box-shadow: 0 0 10px rgba(0, 51, 102, 0.1);
        transition: all 0.3s ease;
    }
    
    .search-box:focus {
        box-shadow: 0 0 15px rgba(0, 123, 255, 0.3);
        outline: none;
    }
    
    .filter-card {
        background: rgba(255, 255, 255, 0.9);
        border-radius: 20px;
        padding: 1.5rem;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    }
    
    .form-select, .form-control {
        border-radius: 50px;
        padding: 0.5rem 1.25rem;
        border: 1px solid #ced4da;
        transition: all 0.3s ease;
    }
    
    .form-select:focus, .form-control:focus {
        border-color: #003366;
        box-shadow: 0 0 10px rgba(0, 123, 255, 0.25);
    }

    /* Event Cards */
    .event-card {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        overflow: hidden;
    }
    
    .event-card:hover {
        transform: translateY(-10px);
        box-shadow: 0 15px 30px rgba(0, 0, 0, 0.15);
    }
    
    .event-image {
        height: 200px;
        object-fit: cover;
        transition: transform 0.5s ease;
    }
    
    .event-card:hover .event-image {
        transform: scale(1.05);
    }

    /* Buttons */
    .btn-party {
        background: linear-gradient(135deg, #003366, #00509e);
        border: none;
        color: white;
        padding: 0.75rem 1.5rem;
        border-radius: 0 50px 50px 0;
        font-weight: bold;
        box-shadow: 0 4px 10px rgba(0, 51, 102, 0.4);
        transition: all 0.3s ease;
    }
    
    .btn-party:hover {
        background: linear-gradient(135deg, #00509e, #87ceeb);
        transform: translateY(-2px);
        box-shadow: 0 6px 15px rgba(0, 123, 255, 0.4);
    }
    
    .btn-primary {
        background: linear-gradient(135deg, #003366, #00509e);
        border: none;
        transition: all 0.3s ease;
    }
    
    .btn-primary:hover {
        background: linear-gradient(135deg, #00509e, #87ceeb);
        transform: translateY(-2px);
    }

    /* Pagination */
    .page-link {
        color: #003366;
        border-radius: 50px !important;
        margin: 0 5px;
        border: 1px solid #dee2e6;
    }
    
    .page-item.active .page-link {
        background: linear-gradient(135deg, #003366, #00509e);
        border-color: #003366;
    }
</style>


@* 
@model IPagedList<EventEase.Models.Event>
@using X.PagedList
@using X.PagedList.Mvc.Core

@{
    ViewData["Title"] = "Event Listings";
    Layout = "~/Views/Shared/_Layout.cshtml"; // Or your layout path
}

<h1 class="text-center my-4">Browse Events</h1>

<form method="get" asp-action="Index" class="row g-3 mb-4 justify-content-center">
    <div class="col-md-3">
        <input type="text" name="searchTerm" class="form-control" placeholder="Search..." value="@ViewData["SearchTerm"]" />
    </div>

    <div class="col-md-2">
        <select name="eventTypeId" class="form-select">
            <option value="">All Types</option>
            @foreach (var type in (SelectList)ViewData["EventTypes"])
            {
                if (ViewData["EventTypeId"]?.ToString() == type.Value)
                {
                    <option value="@type.Value" selected="selected">@type.Text</option>
                }
                else
                {
                    <option value="@type.Value">@type.Text</option>
                }
            }
        </select>
    </div>

    <div class="col-md-2">
        <select name="venueId" class="form-select">
            <option value="">All Venues</option>
            @foreach (var venue in (SelectList)ViewData["Venues"])
            {
                if (ViewData["VenueId"]?.ToString() == venue.Value)
                {
                    <option value="@venue.Value" selected="selected">@venue.Text</option>
                }
                else
                {
                    <option value="@venue.Value">@venue.Text</option>
                }
            }
        </select>
    </div>

    <div class="col-md-2">
        <input type="date" name="startDate" class="form-control" value="@ViewData["StartDate"]" />
    </div>

    <div class="col-md-2">
        <input type="date" name="endDate" class="form-control" value="@ViewData["EndDate"]" />
    </div>

    <div class="col-md-1 form-check mt-2">
        <input class="form-check-input" type="checkbox" name="availableOnly" value="true" @(ViewData["AvailableOnly"] != null && (bool)ViewData["AvailableOnly"] ? "checked" : "") />
        <label class="form-check-label">Available Only</label>
    </div>

    <div class="col-md-2">
        <button type="submit" class="btn btn-primary w-100">Filter</button>
    </div>
</form>

@if (Model.Any())
{
    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
        @foreach (var item in Model)
        {
            <div class="col">
                <div class="card h-100">
                    <div class="card-body">
                        <h5 class="card-title">@item.EventName</h5>
                        <h6 class="card-subtitle mb-2 text-muted">@item.EventDate.ToShortDateString()</h6>
                        <p class="card-text">@item.Description</p>
                        <p><strong>Type:</strong> @item.EventType?.Name</p>
                        <p><strong>Venue:</strong> @item.Venue?.VenueName</p>
                        <p><strong>Availability:</strong> @(item.Bookings.Any() ? "Booked" : "Available")</p>
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="d-flex justify-content-center mt-4">
        @Html.PagedListPager(Model, page => Url.Action("Index", new
        {
            page,
        searchTerm = ViewData["SearchTerm"],
        eventTypeId = ViewData["EventTypeId"],
        venueId = ViewData["VenueId"],
        startDate = ViewData["StartDate"],
        endDate = ViewData["EndDate"],
        availableOnly = ViewData["AvailableOnly"]
        }))
</div>
}
else
{
    <div class="alert alert-warning text-center">
        No events found.
    </div>
}





*@


@*
@using X.PagedList
@model IPagedList<EventEase.Models.Event>

@{
    ViewData["Title"] = "Home";
}

<div class="container-fluid py-5" style="padding-left: 0; padding-right: 0;">
    <!-- Hero Section -->
    <div class="text-center mb-5">
        <h1 class="display-4 fw-bold text-gradient">🎉 Welcome to EventEase 🎉</h1>
        <p class="lead text-muted">Find the most vibrant events, book with ease, and make memories that last forever.</p>
    </div>

    <!-- Search Section -->
    <div class="text-center mb-4">
        <form method="get" asp-action="Index" class="d-flex justify-content-center">
            <input type="text" name="searchTerm" class="form-control search-box" placeholder="🔍 Search for events..." value="@ViewData["SearchTerm"]" />
            <button type="submit" class="btn btn-party ms-2">Search</button>
        </form>
    </div>

    <!-- Display message if no events found -->
    @if (Model.Count == 0)
    {
        <div class="text-center">
            <p class="display-5 text-muted">No event, booking, or venue found. Please try a different search.</p>
        </div>
    }
    else
    {
        <!-- Events Section -->
        <h2 class="text-center mb-4 text-dark fw-semibold">Upcoming Events</h2>

        <!-- Horizontal Scroll Section -->
        <div class="events-wrapper" style="padding-left: 0; padding-right: 0;">
            @foreach (var eventItem in Model)
            {
                <div class="event-card-container">
                    <div class="card shadow-lg border-0 rounded-3 overflow-hidden event-card">
                        @if (!string.IsNullOrEmpty(eventItem.Venue?.ImageVenue))
                        {
                            <img src="@eventItem.Venue.ImageVenue" class="card-img-top img-fluid" alt="Venue Image">
                        }

                        <div class="card-body">
                            <h5 class="card-title fw-bold text-primary">@eventItem.EventName</h5>
                            <p class="card-text text-muted"><i class="bi bi-calendar-event"></i> @eventItem.EventDate.ToString("dddd, MMM d, yyyy")</p>
                            <p class="text-dark">@eventItem.Description</p>

                            <hr>

                            <h6 class="text-muted"><i class="bi bi-geo-alt"></i> <strong>Venue:</strong> @eventItem.Venue?.VenueName</h6>
                            <p class="text-muted"><i class="bi bi-map"></i> <strong>Location:</strong> @eventItem.Venue?.VenueLocaiton</p>

                            @if (eventItem.Bookings.Any())
                            {
                                <h6 class="text-success"><i class="bi bi-check-circle"></i> Bookings</h6>
                                <ul class="list-group small">
                                    @foreach (var booking in eventItem.Bookings)
                                    {
                                        <li class="list-group-item text-muted bg-light border-0">
                                            <i class="bi bi-clock"></i> @booking.BookingDate.ToString("MMM d, yyyy")
                                        </li>
                                    }
                                </ul>
                            }
                            else
                            {
                                <p class="text-muted"><i class="bi bi-x-circle"></i> No bookings yet.</p>
                            }

                            <a href="@Url.Action("Create", "Bookings")" class="btn btn-primary mt-3 w-100">Book Now</a>

                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Pagination Controls -->
        <div class="d-flex justify-content-center mt-4">
            @if (Model.HasPreviousPage)
            {
                <a href="@Url.Action("Index", new { page = Model.PageNumber - 1, searchTerm = ViewData["SearchTerm"] })" class="btn btn-outline-primary me-2">Previous</a>
            }

            @if (Model.HasNextPage)
            {
                <a href="@Url.Action("Index", new { page = Model.PageNumber + 1, searchTerm = ViewData["SearchTerm"] })" class="btn btn-outline-primary">Next</a>
            }
        </div>
    }
</div>

<!-- Custom Styling -->
<style>
    .text-gradient {
        background: linear-gradient(90deg, #003366, #00509e, #80d0ff, #87ceeb); /* Dark blue to baby blue gradient */
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    .search-box {
        max-width: 800px;
        padding: 0.75rem 1rem;
        border-radius: 50px;
        border: 2px solid #003366; /* Dark blue border */
        outline: none;
        transition: all 0.3s ease-in-out;
        box-shadow: 0 0 10px rgba(0, 51, 102, 0.3); /* Dark blue shadow */
    }

        .search-box:focus {
            border-color: #003366; /* Dark blue */
            box-shadow: 0 0 15px rgba(0, 123, 255, 0.5); /* Sky blue focus glow */
        }

    .btn-party {
        background: linear-gradient(135deg, #003366, #00509e); /* Dark blue to baby blue gradient */
        border: none;
        color: white;
        padding: 0.6rem 1.25rem;
        border-radius: 50px;
        font-weight: bold;
        box-shadow: 0 4px 10px rgba(0, 51, 102, 0.4); /* Dark blue shadow */
        transition: background 0.3s ease, transform 0.2s ease;
    }

        .btn-party:hover {
            background: linear-gradient(135deg, #00509e, #87ceeb); /* Blue to sky blue gradient on hover */
            transform: scale(1.05);
        }

    .events-wrapper {
        display: flex;
        overflow-x: auto;
        gap: 1rem;
        width: 100%;
        padding-bottom: 20px;
    }

    .event-card-container {
        flex: 0 0 auto;
        width: 20rem;
    }

    .event-card {
        transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
    }

        .event-card:hover {
            transform: translateY(-5px);
            box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.2);
        }

    .bi {
        margin-right: 5px;
    }

    .display-5 {
        font-size: 2.5rem;
        font-weight: 600;
        color: #6c757d;
        margin-top: 2rem;
    }

</style>



*@

@*

@using X.PagedList
@model IPagedList<EventEase.Models.Event>

@{
    ViewData["Title"] = "Home";
}

<div class="container-fluid py-5" style="padding-left: 0; padding-right: 0;">
    <!-- Hero Section -->
    <div class="text-center mb-5">
         <!--- <h1 class="display-4 text-primary fw-bold">Welcome to EventEase</h1> -->
        <p class="lead text-muted">Discover and book exciting events near you with ease.</p>
    </div>

    <!-- Search Section -->
    <div class="text-center mb-4">
        <form method="get" asp-action="Index">
            <input type="text" name="searchTerm" class="form-control w-50 d-inline-block" placeholder="Search for events..." value="@ViewData["SearchTerm"]" />
            <button type="submit" class="btn btn-primary ms-2">Search</button>
        </form>
    </div>

    <!-- Display message if no events found -->
    @if (Model.Count == 0)
    {
        <div class="text-center">
            <p class="display-5 text-muted">No event, booking, or venue found. Please try a different search.</p>
        </div>
    }
    else
    {
        <!-- Events Section -->
        <h2 class="text-center mb-4 text-dark fw-semibold">Upcoming Events</h2>

        <!-- Horizontal Scroll Section -->
        <div class="events-wrapper" style="padding-left: 0; padding-right: 0;">
            @foreach (var eventItem in Model)
            {
                <div class="event-card-container">
                    <div class="card shadow-lg border-0 rounded-3 overflow-hidden event-card">
                        @if (!string.IsNullOrEmpty(eventItem.Venue?.Imagegurl))
                        {
                            <img src="@eventItem.Venue.Imagegurl" class="card-img-top img-fluid" alt="Venue Image">
                        }

                        <div class="card-body">
                            <h5 class="card-title fw-bold text-primary">@eventItem.EventName</h5>
                            <p class="card-text text-muted"><i class="bi bi-calendar-event"></i> @eventItem.EventDate.ToString("dddd, MMM d, yyyy")</p>
                            <p class="text-dark">@eventItem.Description</p>

                            <hr>

                            <h6 class="text-muted"><i class="bi bi-geo-alt"></i> <strong>Venue:</strong> @eventItem.Venue?.VenueName</h6>
                            <p class="text-muted"><i class="bi bi-map"></i> <strong>Location:</strong> @eventItem.Venue?.VenueLocaiton</p>

                            @if (eventItem.Bookings.Any())
                            {
                                <h6 class="text-success"><i class="bi bi-check-circle"></i> Bookings</h6>
                                <ul class="list-group small">
                                    @foreach (var booking in eventItem.Bookings)
                                    {
                                        <li class="list-group-item text-muted bg-light border-0">
                                            <i class="bi bi-clock"></i> @booking.BookingDate.ToString("MMM d, yyyy")
                                        </li>
                                    }
                                </ul>
                            }
                            else
                            {
                                <p class="text-muted"><i class="bi bi-x-circle"></i> No bookings yet.</p>
                            }

                            <a href="@Url.Action("Create", "Bookings")" class="btn btn-primary mt-3 w-100">Book Now</a>

                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Pagination Controls -->
        <div class="d-flex justify-content-center mt-4">
            @if (Model.HasPreviousPage)
            {
                <a href="@Url.Action("Index", new { page = Model.PageNumber - 1, searchTerm = ViewData["SearchTerm"] })" class="btn btn-outline-primary me-2">Previous</a>
            }

            @if (Model.HasNextPage)
            {
                <a href="@Url.Action("Index", new { page = Model.PageNumber + 1, searchTerm = ViewData["SearchTerm"] })" class="btn btn-outline-primary">Next</a>
            }
        </div>
    }
</div>

<!-- Custom Styling -->
<style>
    .events-wrapper {
        display: flex;
        overflow-x: auto; /* Enables horizontal scrolling */
        gap: 1rem; /* Space between the cards */
        width: 100%; /* Ensures the wrapper spans the full width of the screen */
        padding-bottom: 20px; /* Prevents cutting off cards at the bottom */
    }

    .event-card-container {
        flex: 0 0 auto; /* Prevents the cards from stretching */
        width: 20rem; /* Adjust the width of each card */
    }

    .event-card {
        transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
    }

        .event-card:hover {
            transform: translateY(-5px);
            box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.2);
        }

    .bi {
        margin-right: 5px;
    }

    /* Custom styles for the "No events found" message */
    .display-5 {
        font-size: 2.5rem;
        font-weight: 600;
        color: #6c757d; /* Muted grey color */
        margin-top: 2rem;
    }
</style>


*@


@*

@using X.PagedList
@model IPagedList<EventEase.Models.Event>

@{
    ViewData["Title"] = "Home";
}

<div class="container-fluid py-5" style="padding-left: 0; padding-right: 0;">
    <!-- Hero Section -->
    <div class="text-center mb-5">
        <h1 class="display-4 text-primary fw-bold">Welcome to EventEase</h1>
        <p class="lead text-muted">Discover and book exciting events near you with ease.</p>
    </div>

    <!-- Events Section -->
    <h2 class="text-center mb-4 text-dark fw-semibold">Upcoming Events</h2>

    <!-- Horizontal Scroll Section -->
    <div class="events-wrapper" style="padding-left: 0; padding-right: 0;">
        @foreach (var eventItem in Model)
        {
            <div class="event-card-container">
                <div class="card shadow-lg border-0 rounded-3 overflow-hidden event-card">
                    @if (!string.IsNullOrEmpty(eventItem.Venue?.Imagegurl))
                    {
                        <img src="@eventItem.Venue.Imagegurl" class="card-img-top img-fluid" alt="Venue Image">
                    }

                    <div class="card-body">
                        <h5 class="card-title fw-bold text-primary">@eventItem.EventName</h5>
                        <p class="card-text text-muted"><i class="bi bi-calendar-event"></i> @eventItem.EventDate.ToString("dddd, MMM d, yyyy")</p>
                        <p class="text-dark">@eventItem.Description</p>

                        <hr>

                        <h6 class="text-muted"><i class="bi bi-geo-alt"></i> <strong>Venue:</strong> @eventItem.Venue?.VenueName</h6>
                        <p class="text-muted"><i class="bi bi-map"></i> <strong>Location:</strong> @eventItem.Venue?.VenueLocaiton</p>

                        @if (eventItem.Bookings.Any())
                        {
                            <h6 class="text-success"><i class="bi bi-check-circle"></i> Bookings</h6>
                            <ul class="list-group small">
                                @foreach (var booking in eventItem.Bookings)
                                {
                                    <li class="list-group-item text-muted bg-light border-0">
                                        <i class="bi bi-clock"></i> @booking.BookingDate.ToString("MMM d, yyyy")
                                    </li>
                                }
                            </ul>
                        }
                        else
                        {
                            <p class="text-muted"><i class="bi bi-x-circle"></i> No bookings yet.</p>
                        }

                        <a href="#" class="btn btn-primary mt-3 w-100">Book Now</a>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Pagination Controls -->
    <div class="d-flex justify-content-center mt-4">
        @if (Model.HasPreviousPage)
        {
            <a href="@Url.Action("Index", new { page = Model.PageNumber - 1 })" class="btn btn-outline-primary me-2">Previous</a>
        }

        @if (Model.HasNextPage)
        {
            <a href="@Url.Action("Index", new { page = Model.PageNumber + 1 })" class="btn btn-outline-primary">Next</a>
        }
    </div>
</div>

<!-- Custom Styling -->
<style>
    .events-wrapper {
        display: flex;
        overflow-x: auto; /* Enables horizontal scrolling */
        gap: 1rem; /* Space between the cards */
        width: 100%; /* Ensures the wrapper spans the full width of the screen */
        padding-bottom: 20px; /* Prevents cutting off cards at the bottom */
    }

    .event-card-container {
        flex: 0 0 auto; /* Prevents the cards from stretching */
        width: 20rem; /* Adjust the width of each card */
    }

    .event-card {
        transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
    }

        .event-card:hover {
            transform: translateY(-5px);
            box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.2);
        }

    .bi {
        margin-right: 5px;
    }
</style>



*@

@*

@model List<EventEase.Models.Event>

@{
    ViewData["Title"] = "Home";
}

<div class="container py-5">
    <!-- style="position: absolute; top: 50px; left: 0; padding: 20px;" -->



    <!-- Hero Section -->
    <div class="text-center mb-5">
        <h1 class="display-4 text-primary fw-bold">Welcome to EventEase</h1>
        <p class="lead text-muted">Discover and book exciting events near you with ease.</p>
    </div>

    <!-- Events Section -->
    <h2 class="text-center mb-4 text-dark fw-semibold">Upcoming Events</h2>

    <div class="row">
        @foreach (var eventItem in Model)
        {
            <div class="col-md-4 mb-4">
                <div class="card shadow-lg border-0 rounded-3 overflow-hidden event-card">
                    @if (!string.IsNullOrEmpty(eventItem.Venue?.Imagegurl))
                    {
                        <img src="@eventItem.Venue.Imagegurl" class="card-img-top img-fluid" alt="Venue Image">
                    }

                    <div class="card-body">
                        <h5 class="card-title fw-bold text-primary">@eventItem.EventName</h5>
                        <p class="card-text text-muted"><i class="bi bi-calendar-event"></i> @eventItem.EventDate.ToString("dddd, MMM d, yyyy")</p>
                        <p class="text-dark">@eventItem.Description</p>

                        <hr>

                        <h6 class="text-muted"><i class="bi bi-geo-alt"></i> <strong>Venue:</strong> @eventItem.Venue?.VenueName</h6>
                        <p class="text-muted"><i class="bi bi-map"></i> <strong>Location:</strong> @eventItem.Venue?.VenueLocaiton</p>

                        @if (eventItem.Bookings.Any())
                        {
                            <h6 class="text-success"><i class="bi bi-check-circle"></i> Bookings</h6>
                            <ul class="list-group small">
                                @foreach (var booking in eventItem.Bookings)
                                {
                                    <li class="list-group-item text-muted bg-light border-0">
                                        <i class="bi bi-clock"></i> @booking.BookingDate.ToString("MMM d, yyyy")
                                    </li>
                                }
                            </ul>
                        }
                        else
                        {
                            <p class="text-muted"><i class="bi bi-x-circle"></i> No bookings yet.</p>
                        }

                        <a href="#" class="btn btn-primary mt-3 w-100">Book Now</a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<!-- Custom Styling -->
<style>
    .event-card {
        transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
    }

    .event-card:hover {
        transform: translateY(-5px);
        box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.2);
    }

    .bi {
        margin-right: 5px;
    }
</style>

*@